Directory structure:
└── cursedsheep-atomic-deobfuscator/
    └── AtomicDeobfuscator/
        ├── App.config
        ├── AtomicDeobfuscator.csproj
        ├── AtomicDeobfuscator.sln
        ├── Program.cs
        ├── hideMethodsRemover.cs
        └── Properties/
            └── AssemblyInfo.cs

================================================
File: AtomicDeobfuscator/App.config
================================================
ï»¿<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
    </startup>
</configuration>


================================================
File: AtomicDeobfuscator/AtomicDeobfuscator.csproj
================================================
ï»¿<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{84E3BD1E-C5EB-4F8D-8C37-5D29B5B65554}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <RootNamespace>AtomicDeobfuscator</RootNamespace>
    <AssemblyName>AtomicDeobfuscator</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="dnlib">
      <HintPath>..\..\..\..\Documents\Reverse Engineering stuff\Reverse engineering\.net dump tools\.net Unpacking Tools\Confuser\De4Dot Latest\dnlib.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="hideMethodsRemover.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
</Project>


================================================
File: AtomicDeobfuscator/AtomicDeobfuscator.sln
================================================
ï»¿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 16
VisualStudioVersion = 16.0.29911.84
MinimumVisualStudioVersion = 10.0.40219.1
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "AtomicDeobfuscator", "AtomicDeobfuscator.csproj", "{84E3BD1E-C5EB-4F8D-8C37-5D29B5B65554}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{84E3BD1E-C5EB-4F8D-8C37-5D29B5B65554}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{84E3BD1E-C5EB-4F8D-8C37-5D29B5B65554}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{84E3BD1E-C5EB-4F8D-8C37-5D29B5B65554}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{84E3BD1E-C5EB-4F8D-8C37-5D29B5B65554}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {638BF5FA-EE3D-403D-92C5-6663D1F49AFE}
	EndGlobalSection
EndGlobal



================================================
File: AtomicDeobfuscator/Program.cs
================================================
ï»¿using dnlib.DotNet;
using dnlib.DotNet.Writer;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AtomicDeobfuscator
{
    class Program
    {
        static void Main(string[] args)
        {
            string filename;
            try
            {
                filename = args[0];
            }
            catch
            {
                Console.Write("Enter path: ");
                filename = Console.ReadLine().Replace(@"""", "");
            }
            Console.Title = "Atomic Deobfuscator By CursedSheep ;D";
            Console.WriteLine("Atomic Deobfuscator by Cursedsheep ;D");
            ModuleDefMD module = ModuleDefMD.Load(filename);
            Console.WriteLine("Hide methods: " + hideMethodsRemover.Deobfuscate(module));
            ModuleWriterOptions mod = new ModuleWriterOptions(module);
            mod.MetadataLogger = DummyLogger.NoThrowInstance;
            string patho = Path.GetDirectoryName(filename) + "\\" + Path.GetFileNameWithoutExtension(filename) + "-Deobfuscated" + Path.GetExtension(filename);
            module.Write(patho, mod); 
            Console.WriteLine("saved to " + patho);
            Console.ReadKey();
        }
    }
}



================================================
File: AtomicDeobfuscator/hideMethodsRemover.cs
================================================
ï»¿using dnlib.DotNet;
using dnlib.DotNet.Emit;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AtomicDeobfuscator
{
    class hideMethodsRemover
    {
        private static OpCode[] list = { OpCodes.Call, OpCodes.Sizeof, OpCodes.Calli };
        private static bool detect(ModuleDefMD module)
        {
            foreach (TypeDef type in module.GetTypes())
            {
                foreach (MethodDef method in type.Methods)
                {
                    if (!method.HasBody || !method.Body.HasInstructions || !method.Body.HasExceptionHandlers) continue;
                    var exceptionhandlers = method.Body.ExceptionHandlers.ToArray();
                    foreach (ExceptionHandler fd in exceptionhandlers)
                    {
                        if (list.Contains(fd.TryStart.OpCode) && fd.TryStart.Operand == null) return true;
                    }
                }
            }
            return false;
        }
        public static int Deobfuscate(ModuleDefMD module)
        {
            bool hasprotection = detect(module);
            int counter = 0;
            if (!hasprotection) return counter;
            foreach (TypeDef type in module.GetTypes())
            {
                foreach (MethodDef method in type.Methods)
                {
                    if (!method.HasBody || !method.Body.HasInstructions || !method.Body.HasExceptionHandlers) continue;
                    var exceptionhandlers = method.Body.ExceptionHandlers.ToArray();
                    foreach (ExceptionHandler fd in exceptionhandlers)
                    {
                        if (list.Contains(fd.TryStart.OpCode) && fd.TryStart.Operand == null)
                        {
                            var instructions = method.Body.Instructions;
                            //int startIndex = method.Body.Instructions.IndexOf(fd.HandlerStart);
                            int endIndex = instructions.IndexOf(fd.TryEnd);
                            for (int i = 0; i < endIndex; i++) instructions[i].OpCode = OpCodes.Nop;
                            method.Body.ExceptionHandlers.Remove(fd);
                            counter++;

                        }
                    }
                }
            }
            return counter;
        }
    }
}



================================================
File: AtomicDeobfuscator/Properties/AssemblyInfo.cs
================================================
ï»¿using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("AtomicDeobfuscator")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("AtomicDeobfuscator")]
[assembly: AssemblyCopyright("Copyright Â©  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

// Setting ComVisible to false makes the types in this assembly not visible
// to COM components.  If you need to access a type in this assembly from
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("84e3bd1e-c5eb-4f8d-8c37-5d29b5b65554")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers
// by using the '*' as shown below:
// [assembly: AssemblyVersion("1.0.*")]
[assembly: AssemblyVersion("1.0.0.0")]
[assembly: AssemblyFileVersion("1.0.0.0")]


